name: Download and Release Files

on:
  workflow_dispatch:
    inputs:
      download_urls:
        description: 'Multiple URLs (pisahkan dengan spasi)'
        required: true
        type: string
      tag_name:
        description: 'Nama tag dan release'
        required: false
        type: string
        default: 'kernel_custom'

jobs:
  download-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Create download directory
      run: mkdir -p downloads
      
    - name: Download multiple files
      id: download
      run: |
        echo "Processing multiple URLs..."
        
        urls="${{ inputs.download_urls }}"
        
        counter=1
        for url in $urls; do
          if [ -z "$url" ]; then
            continue
          fi
          
          echo "[$counter] Downloading: $url"
          
          if curl -L --fail -o "temp_$counter" "$url"; then
            filename=$(basename "$url")
            mv "temp_$counter" "downloads/$filename"
            
            file_size=$(ls -lh "downloads/$filename" | awk '{print $5}')
            echo "Downloaded: $filename ($file_size)"
            counter=$((counter + 1))
          else
            echo "Failed to download: $url"
          fi
        done
        
        total_files=$((counter - 1))
        
        if [ $total_files -eq 0 ]; then
          echo "Error: No files downloaded"
          exit 1
        fi
        
        echo "total_files=$total_files" >> $GITHUB_OUTPUT
        echo "Total downloaded: $total_files files"
        
        ls -lh downloads/

    - name: Check if release exists
      id: check
      continue-on-error: true
      run: |
        if gh release view ${{ inputs.tag_name }} >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete existing release if exists
      if: steps.check.outputs.exists == 'true'
      run: |
        gh release delete ${{ inputs.tag_name }} -y
        git push --delete origin ${{ inputs.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create release with multiple files
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.tag_name }}
        name: ${{ inputs.tag_name }}
        body: ''
        files: downloads/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Success
      run: |
        echo "Release ${{ inputs.tag_name }} created successfully!"
        echo "Total files: ${{ steps.download.outputs.total_files }}"
        echo "Uploaded files:"
        ls -1 downloads/
